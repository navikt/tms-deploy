name: "Build and deploy mikrofrontend"
on:
  workflow_call:
    inputs:
      cluster:
        required: true
        type: string
      node-version:
        required: true
        type: string
env:
  "IMAGE": "ghcr.io/${{ github.repository }}/mikrofrontend:${{ github.sha }}"
jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'

    steps:
      - name: Set repository name
        run: echo "REPOSITORY_NAME=$(echo $GITHUB_REPOSITORY | rev | cut -f1 -d"/" | rev )" >> $GITHUB_ENV
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-node@v3"
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: "https://npm.pkg.github.com"
          cache: 'npm'
      - name: "Install dependencies"
        run: "npm ci"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run tests
        run: npm test
      - name: "Build application"
        run: "npm run build"
      - name: cdn-upload
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: min-side
          source: ./dist
          destination: ${{ env.REPOSITORY_NAME }}
      - name: "Build and publish Docker image"
        run:
          "docker build --pull --tag ${IMAGE} . && echo $GITHUB_TOKEN | docker login\
          \ --username $GITHUB_REPOSITORY --password-stdin https://ghcr.io\
          \ && docker push ${IMAGE}"
        env:
          "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        cluster: ${{ fromJSON(inputs.cluster) }}

    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to ${{ matrix.cluster }}"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: ${{ matrix.cluster }}
          RESOURCE: nais/${{ matrix.cluster }}/nais.yaml
